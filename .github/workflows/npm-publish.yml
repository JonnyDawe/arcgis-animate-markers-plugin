name: Node.js Package

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm install

      - name: Build distributables
        run: npm run build

      - name: Extract package version
        id: get_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
        # This step extracts the version from package.json and sets it as an environment variable

      - name: Create release tag
        id: create_tag
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git tag v${{ env.PACKAGE_VERSION }}
          git push origin v${{ env.PACKAGE_VERSION }}
        # This step creates and pushes a git tag with the package version

      - name: Check if the tag is new
        id: ensure_new_tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin | grep "refs/tags/v${{ env.PACKAGE_VERSION }}" || echo "false")
          if [ "$TAG_EXISTS" != "false" ]; then
            echo "The tag v${{ env.PACKAGE_VERSION }} already exists. Exiting..."
            exit 1
          fi
          echo "The tag v${{ env.PACKAGE_VERSION }} is new."
        # This step checks if the git tag already exists to prevent re-publishing

      - name: Publish package on NPM ðŸ“¦
        if: steps.ensure_new_tag.outcome == 'success'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        # This step publishes the package to npm if the tag is new